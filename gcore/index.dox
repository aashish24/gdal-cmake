/*!
\mainpage GDAL - Geospatial Data Abstraction Library

<h2>Overview</h2>

GDAL is a translator library for raster geospatial data formats
that is released under an <a href="http://www.opensource.org/">
Open Source</a> license.  As a library, it presents a
<a href="gdal_datamodel.html"> single abstract data
model</a> to the calling application for all supported formats.<P>

Maintainer: <a href="http://members.home.com/warmerda/">Frank Warmerdam</a>.

<h2>Status</h2>

GDAL is in active use in a few projects, and includes a number of formats.
Current translators include GeoTIFF (read/write), Erdas Imagine (read),
ESRI .BIL (read/write), .aux labelled raw (read/write), DTED (read), SDTS
DEM (read), CEOS (read), JPEG (read/write), PNG (read/write), 
Geosoft GXF (read) and Arc/Info Binary Grid (read).<p>

I have created the 
<a href="mailto:gdal-dev@egroups.com">gdal-dev@egroups.com</a>
mailing list.  Subscriptions can be done, and archives reviewed 
<a href="http://www.eGroups.com/list/gdal-dev/">on the web</a>.<p>

Incomplete (but useful) <a href="hierarchy.html">API Documentation</a> 
exists for GDAL, and was created using Doxygen (as was this page). <p>

<h2>Bug Reporting</h2>

GDAL bugs <a href="http://bugzilla.remotesensing.org/enter_bug.cgi">can be reported</a>, and 
<a href="http://bugzilla.remotesensing.org/buglist.cgi">can be listed</a> 
using BugZilla.<p>

<h2>Source Access</h2>

The GDAL source is available by anonymous CVS:<p>

<pre>
export CVSROOT=:pserver:anonymous@cvs.remotesensing.org:/cvsroot
cvs login
Password: anonymous
cvs checkout gdal
</pre>

Update access to the CVS repository can be obtained by arrangement with
the maintainer.  The CVS tree can also be 
<a href="http://www.remotesensing.org/cgi-bin/cvsweb.cgi/osrs/gdal/">browsed
on the web</a>.  The last full source release is available as
<a href="ftp://ftp.remotesensing.org/pub/gdal/gdal110.zip">gdal110.zip</a>
or 
<a href="ftp://ftp.remotesensing.org/pub/gdal/gdal-1.1.0.tar.gz">
gdal-1.1.0.tar.gz</a>.<p>

<h2>Key Documentation Entry Points</h2>

<ul>
<li> <a href="faq.html">GDAL FAQ</a>
<li> <a href="gdal_datamodel.html">GDAL Data Model</a>
<li> <a href="gdal_tutorial.html">GDAL API Tutorial</a>
<li> <a href="class_gdaldataset.html">GDALDataset</a>
<li> <a href="class_gdalrasterband.html">GDALRasterBand</a>
</ul>

<h2>Building</h2>

GDAL has been successfully built on Linux, IRIX, Solaris, and Windows NT.  
On Unix platforms you might be able to build it as follows (assuming it is
unpacked or checked out of CVS as <b>gdal</b>):

<pre>
% cd gdal
% ./configure
% make
</pre>

Some caveats are:<p>
<ul>

<li> The shared library building is pretty specific to the GNU tool chain. 
If you are using something different than GNU C++, then you will likely 
finding that the .so files isn't built successfully.  You could just link 
against the static libraries (normally gdal/gdal.a gdal/ogr/ogr.a 
gdal/frmts/o/ *.a gdal/gdal.a gdal/port/cpl.a) or you could hack LD_SHARED 
command in gdal/GDALmake.opt to work on your platform.  I do plan to convert 
to using libtool at some point in the future.<p>

<li> I depend on GNUmake on Unix platforms.  Just get and install it. <p>

<li> My "autoconf" logic that checks for libpng and libjpeg isn't too savvy
about versions.  If it is unsing pre-installed versions of these libraries
and this support isn't working, rerun configure with ``--with-png=internal''
or ``--with-jpeg=internal'' instead. <p>

<li> If you find build problems with one of the format drivers that you
don't care about, just remove the format from the GDAL_FORMATS line
at the bottom of gdal/GDALmake.opt, do a make clean, and make.  This will
drop it from the build and default runtime registration. <p>

</ul>

GDAL can be built on Windows using MS VC++ at the commandline.  For this to
work you will normally have to have run the VCVAR32.BAT script that comes
with the compiler, and then do the following:<p>

<pre>
C:\> CD GDAL
C:\GDAL\> nmake /f makefile.vc
</pre>

I frequently forget to update the Windows makefiles when I add new files,
so if something comes up missing consider comparing the file lists in the
appropriate makefile.vc against the GNUmakefile or just contact me. <p>

<h2>GDAL Utility Programs</h2>

The following GDAL utility programs exist current:

<ul>
<li> <b>gdal/apps/gdalinfo</b>: Dumps a variety of information about a
dataset to the terminal. <p>

<li> <b>gdal/apps/gdal_translate</b>: Translate between GDAL formats.  The 
default output format is GeoTIFF.   Limited support for resizing images, 
selecting subwindows, and converting between data types.  

<li> <b>gdal/apps/gdaladdo</b>: Add overviews to an existing database.

</ul>

Binaries of the GDAL utility programs and the shared libraries are
available for
<a href="ftp://ftp.remotesensing.org/pub/gdal/gdal110_nt_bin.zip">MS Windows 
NT/95/98</a> and 
<a href="ftp://ftp.remotesensing.org/pub/gdal/gdal-1.1.0_linux_bin.tar.gz">
Linux</a>.<p>

<h2>Related Information</h2>

<ul>

<li> <a href="http://gdal.velocet.ca/projects/index.html">My other 
projects</a>, many of which are incorporated into GDAL.<p>

<li> <a href="http://www.remotesensing.org/">RemoteSensing.ORG</a>: An
organization for cooperative OpenSource work related to remote sensing.  
GDAL is hosted at remotesensing.org.<p>

<li> <a href="http://gdal.velocet.ca/projects/opengis/ogrhtml/class_ogrspatialreference.html">OGRSpatialReference</a>: My OGR encapsulation of OpenGIS
projection definitions.<p>

<li> <a href="http://openev.sourceforge.net">OpenEV</a>: An OpenGL/GTK/Python
based graphical viewer which exclusively uses GDAL for raster access.<p>

<li> <a href="http://ossim.remotesensing.org">OSSIM</a>: 
Another geospatial viewing and analysis environment which uses GDAL as one
of several plugins.<p>

</ul>

*/

