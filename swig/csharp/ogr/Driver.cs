/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace OGR {

using System;

public class Driver : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal Driver(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(Driver obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  protected Driver() : this(IntPtr.Zero, false) {
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      throw new MethodAccessException("C++ destructor does not have public access");
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  public string name {
    get {
      return ogrPINVOKE.get_Driver_name(swigCPtr);
    } 
  }

  public DataSource CreateDataSource(string name, SWIGTYPE_p_p_char options) {
    IntPtr cPtr = ogrPINVOKE.Driver_CreateDataSource(swigCPtr, name, SWIGTYPE_p_p_char.getCPtr(options));
    return (cPtr == IntPtr.Zero) ? null : new DataSource(cPtr, true);
  }

  public DataSource CopyDataSource(DataSource copy_ds, string name, SWIGTYPE_p_p_char options) {
    IntPtr cPtr = ogrPINVOKE.Driver_CopyDataSource(swigCPtr, DataSource.getCPtr(copy_ds), name, SWIGTYPE_p_p_char.getCPtr(options));
    return (cPtr == IntPtr.Zero) ? null : new DataSource(cPtr, true);
  }

  public DataSource Open(string name, int update) {
    IntPtr cPtr = ogrPINVOKE.Driver_Open(swigCPtr, name, update);
    return (cPtr == IntPtr.Zero) ? null : new DataSource(cPtr, true);
  }

  public int DeleteDataSource(string name) {
    return ogrPINVOKE.Driver_DeleteDataSource(swigCPtr, name);
  }

  public int TestCapability(string cap) {
    return ogrPINVOKE.Driver_TestCapability(swigCPtr, cap);
  }

  public string GetName() {
    return ogrPINVOKE.Driver_GetName(swigCPtr);
  }

}

}
